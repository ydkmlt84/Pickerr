.stack {
  --card-height: min(calc(80vmin * 1.5), calc(var(--vh) * 75), 410px);
  --card-width: calc(var(--card-height) * 0.66666);
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  perspective: var(--card-height);
  overflow: hidden;
  padding-top: calc(15px * 2 + env(safe-area-inset-top));
  padding-bottom: calc(15px * 5);
}

.emptyStack {
  composes: stack;
  place-items: center;
  min-height: calc(
    var(--card-height) + 105px
  ); /* Card height plus the padding top and bottom */
}

.item {
  position: absolute;
  touch-action: pan-y;
  user-select: none;
}

.item:last-of-type {
  position: relative;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.emptyText {
  font-weight: bold;
  font-size: 1.3rem;
  opacity: 0;
  animation: fadeIn 150ms ease-in both;
  margin-top: calc(15px * 3);
}

.control {
  display: none;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  border: none;
  background-color: var(--mm-add-color);
  font-size: 4rem;
  border-radius: 2rem;
  cursor: pointer;
  transition: background-color 200ms ease-in-out;
}

@media (hover: hover) {
  .control:hover {
    background-color: var(--mm-add-highlight-color);
  }
}

.dislikeButton {
  composes: control;
  --strokeColor: var(--mm-failure-color);
  left: calc(50% - ((var(--card-width) + 23rem) / 2));
}

.likeButton {
  composes: control;
  --fillColor: hsl(112, 80%, 30%);
  --strokeColor: transparent;
  right: calc(50% - ((var(--card-width) + 23rem) / 2));
}

@media screen and (min-width: 50em) {
  .control {
    display: initial;
  }
}

